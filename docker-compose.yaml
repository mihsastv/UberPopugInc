---
version: '3.8'
services:
  kafka:
    image: bitnami/kafka:3.4.0
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ADVERTISED_LISTENERS=INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@127.0.0.1:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093,CONTROLLER://:9094
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_KRAFT_CLUSTER_ID=N-8Epk7LTfCc-lObC7llXA
    healthcheck:
      test: ["CMD", "bash", "-c", "unset", "JMX_PORT", ";", "/opt/bitnami/kafka/bin/kafka-topics.sh", "--bootstrap-server", "127.0.0.1:9002", "--list"]
      interval: 10s
      start_period: 10s
      timeout: 2s
      retries: 15
    expose:
      - 9093
    ports:
      - 9095:9093
      - 9094:9092

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.0
    expose:
      - 8080
    ports:
      - 8080:8080
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: first
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: http://connect:8083

  ### MIGRATIONS

  # Creating topics that are not created. There is a task to create more comfortable tool for this: PFM-227
  kafka-init:
    image: bitnami/kafka:3.4.0
    entrypoint: [ '/bin/sh', '-c' ]
    depends_on:
      kafka:
        condition: service_healthy
    command: |
      "
      # TODO: Do we really need it, while there are healthchecks and depends on?
      # blocks until kafka is reachable
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list

      # creates topics
      echo -e 'Creating kafka topics...'
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events.uber-popug.profile.stream --replication-factor 1 --partitions 1
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events.uber-popug.profile.be --replication-factor 1 --partitions 1

      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events.uber-popug.task.stream --replication-factor 1 --partitions 1
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic events.uber-popug.task.be --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server kafka:9092 --list
      "


  db:
    image: postgres:15.3-alpine
    command: postgres -c 'wal_level=logical'
    restart: unless-stopped
    environment:
      POSTGRES_USER: uber-popug
      POSTGRES_PASSWORD: uber-popug-password
      POSTGRES_DB: test
    healthcheck:
      test: pg_isready -U rvision -d test
      interval: 10s
      start_period: 10s
      timeout: 2s
      retries: 15
    expose:
      - 5432
    ports:
      - '5454:5432'
    volumes:
      - db:/var/lib/postgresql/data
volumes:
  db:
    driver: local
